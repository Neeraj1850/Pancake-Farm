{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract MasterChef",
						"name": "_chef",
						"type": "address"
					},
					{
						"internalType": "contract IBEP20",
						"name": "_cake",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_admin",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_receiver",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "EmergencyWithdraw",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pid",
						"type": "uint256"
					}
				],
				"name": "Harvest",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pid",
						"type": "uint256"
					}
				],
				"name": "StartFarming",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "adminAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cake",
				"outputs": [
					{
						"internalType": "contract IBEP20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "chef",
				"outputs": [
					{
						"internalType": "contract MasterChef",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IBEP20",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "emergencyWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					}
				],
				"name": "harvest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lptoken",
				"outputs": [
					{
						"internalType": "contract IBEP20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					}
				],
				"name": "pendingReward",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "receiver",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_admin",
						"type": "address"
					}
				],
				"name": "setAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_receiver",
						"type": "address"
					}
				],
				"name": "setReceiver",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					},
					{
						"internalType": "contract IBEP20",
						"name": "_lptoken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "startFarming",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/LotteryRewardPool.sol": "LotteryRewardPool"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/CakeToken.sol": {
			"keccak256": "0x3f7b71a68fba3946d909f8b60272c364eb029e99587dfce389bd87558941ced3",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0f3bacf0a7d93b0d74b96f622be217af0f7d4e87d3156218e370661b6b20365",
				"dweb:/ipfs/QmVn7EQ9QgDTeVJLWpfjn1bD1SkfiwDhs94CxiYybwUq2B"
			]
		},
		"contracts/GSN/Context.sol": {
			"keccak256": "0x9c3e0b08f33ecbf0ec34c89cada6eadcb9f624b1aa6bc7a63d9d3f009300d66c",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://f1587417e98706a3eec064fe405524e540bd50298e14c73a10390df785563bb2",
				"dweb:/ipfs/QmNPwa41jLxqPtqwQLEo2xq6H6cbZ9R9VvUxB3CH2J9ZfV"
			]
		},
		"contracts/LotteryRewardPool.sol": {
			"keccak256": "0x6ae1865ca254c6418ea475572f6a078cf9db1ebf131bc47d4bbdfd9fe24bc6c4",
			"license": "MIT",
			"urls": [
				"bzz-raw://dd1e385778d51fbb9ee6b967c6ca6f94364f364e6bd8d05a0703a8d613b8f9b7",
				"dweb:/ipfs/QmZq5kumUwG8ibogMWs1veirpAyvo7Df5DMA5h4ZBqYNmi"
			]
		},
		"contracts/MasterChef.sol": {
			"keccak256": "0x958e985fff4044d3e681a6ed45e11464680a6e750d95aaa7402ef4c95ecef4f5",
			"license": "MIT",
			"urls": [
				"bzz-raw://4c9a93e75ea672e5fbab025fa4b610d6a5124a7700d4a5db44086fa8e099305c",
				"dweb:/ipfs/QmQVijrHrCupVV4FV6CS7tQAHfCSTC1njAmpWzTW1Tx3Qo"
			]
		},
		"contracts/SyrupBar.sol": {
			"keccak256": "0x299dca85e7eb26a04d606b2f2792e1030c6af0631b726d831bbc124351839eaa",
			"license": "MIT",
			"urls": [
				"bzz-raw://e53ea325c9d877db790b619349db4ac2d631d6bd54dde01cd6579cf2c34f4734",
				"dweb:/ipfs/QmUeMsFyoZkR58shUWMSpGz7TeqvUfigb2tfimjfdwhnK8"
			]
		},
		"contracts/access/Ownable.sol": {
			"keccak256": "0xa8ae448417d7e63683d6dcb70c1c869924abf26039687e5dad9aa38a5d63d538",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://47ced0d2781e8d94e600496b82fc19de470011dc13a6f58418ebf4f0ff81e33b",
				"dweb:/ipfs/QmUyEMrC3drVhDkbvhFv3UgjGugUsfATNCpoHyAjZ98Atk"
			]
		},
		"contracts/math/SafeMath.sol": {
			"keccak256": "0xd4b1686c1494213666dc1423cea64333c3063f334327216d69ca3d59f75a2517",
			"license": "MIT",
			"urls": [
				"bzz-raw://3a3c967dc005a8966266b6052724b7cd04231c6d95abcc03f49e1cbb9ffb890a",
				"dweb:/ipfs/QmRWofmmac5HLRYpMTDQLzmgZyJYeYLB2MY8uTFRKfJuJL"
			]
		},
		"contracts/token/BEP20/BEP20.sol": {
			"keccak256": "0x0442404a56112b52de7e4a64eb0d9fe346add08d122b52e848e43c9f22d707c5",
			"license": "MIT",
			"urls": [
				"bzz-raw://abbecb866acdd459f567efac348a519758c46ca0b53415c484b28b2d28c7b19f",
				"dweb:/ipfs/Qmdo86JSfRcqoMr6Z2H3k1NMZQ6qZCSvSihzCb5Eq7d8DJ"
			]
		},
		"contracts/token/BEP20/IBEP20.sol": {
			"keccak256": "0xcca9eeefad9d3c8a68e426833a5c790d055beebc3f1cefbeac20b096456c9aef",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://61090ac66da4fcf117cb95119cda4c45b5bcf9f8a48203444b0f97b39a9ccbd1",
				"dweb:/ipfs/Qmb1XnfUGdZ7ma31WqhGMaE9mWug1erEUh8xEYvvjZ5v4r"
			]
		},
		"contracts/token/BEP20/SafeBEP20.sol": {
			"keccak256": "0xd74098800643c9a8ee8c33f50ac3aa4e814e38771ca5a17b5514f7a05afc7ece",
			"license": "MIT",
			"urls": [
				"bzz-raw://0cdbdbf4c1cf6a046368d760d0b22d48ecb96172a101af5e344363d0e98b30ee",
				"dweb:/ipfs/QmaiaMR5Je8EhxESc4rxY51zHB4Zn3eMV38BH5mw2ygcEt"
			]
		},
		"contracts/utils/Address.sol": {
			"keccak256": "0xb2ff71cf33d07964024b98ed45eff55e1a6f2c28e3f752dfd89aa2730da3cdc1",
			"license": "MIT",
			"urls": [
				"bzz-raw://a4204f19dbe965cbe3694bd9cbe8bc24677b59739f6c56072e196f7c23e7b57e",
				"dweb:/ipfs/QmU3jXoiFRH6UEDBGp64LncC61YFHkbLwippyJnyLXdXBL"
			]
		}
	},
	"version": 1
}